package com.chillbilling.security;

import com.chillbilling.entity.User;
import com.chillbilling.repository.UserRepository;
import org.springframework.security.core.userdetails.*;
import org.springframework.stereotype.Service;

@Service
public class CustomUserDetailsService implements UserDetailsService {

    private final UserRepository users;

    public CustomUserDetailsService(UserRepository users) {
        this.users = users;
    }

    @Override
    public UserDetails loadUserByUsername(String identifier) throws UsernameNotFoundException {
        User u = users.findByEmailId(identifier)
            .orElseGet(() -> users.findByUsername(identifier)
                .orElseThrow(() -> new UsernameNotFoundException("User not found: " + identifier)));

        // map to Spring user; username is ALWAYS email to keep auth.getName() == email
        return org.springframework.security.core.userdetails.User.builder()
                .username(u.getEmailId())
                .password(u.getPasswordHash())
                .roles(u.getRole().name()) // ADMIN/ACCOUNTANT/CUSTOMER
                .disabled(u.getStatus() != User.Status.ACTIVE)
                .build();
    }
}
